@import "node_modules/bootstrap/scss/functions";
@import "node_modules/bootstrap/scss/variables";
@import "node_modules/bootstrap/scss/mixins";
@import "~@ng-select/ng-select/themes/default.theme.css";
  $dark-grey-color: #666670;
app-switch-field {
  .radio-wrapper {
    display: flex;
  }
  .form-check-label {
    padding: 0 10px 0 10px;
    position: absolute;
    left: 38px;
    top: 3px;
  }
  input[disabled]~.form-check-label, .switch-input[disabled]~.form-check-label {
    cursor: default;
    opacity: .5;
  }
  input[disabled] {
    opacity: 0.5;
  }
}
app-checkbox-field {
  label {
    display: flex;
    align-items: center;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  input[type="checkbox"] {
    display: none;
  }
  .checkbox {
    position: relative;
    display: inline-block;
    width: 24px;
    height: 24px;
    margin-right: 10px;
    border-radius: 4px;
    border: 2px solid #ddd;
    transition: all 0.3s ease;
  }
  input[type="checkbox"]:checked + .checkbox {
    border-color: var(--color2);
  }
  input[disabled]:checked + .checkbox {
    border-color: #F6F6FB;
  }
  input[disabled]:checked + .checkbox::before {
    color: #F6F6FB;
  }
  input[disabled]~.form-check-label, .form-check-input[disabled]~.form-check-label {
    cursor: default;
    opacity: .5;
  }
  input[type="checkbox"]:checked + .checkbox::before {
    color: var(--color2);
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 10px;
    height: 24px;
    border: solid ;
    border-width: 0 6px 6px 0;
    transform: translate(-50%, -50%) rotateZ(45deg);
    animation: check .4s ease forwards;
  }
  input[disabled]:checked + .checkbox::before {
    color: #F6F6FB ;
  }
  @keyframes check {
    0% {
      transform: translate(-50%, -50%) rotateZ(45deg) scale(0.2);
    }
    50% {
      transform: translate(-50%, -50%) rotateZ(45deg) scale(1.2);
    }
    100% {
      transform: translate(-50%, -50%) rotateZ(45deg) scale(0.4);
    }
  }
}
app-date-time-field , app-date-field {
  ion-icon[name='calendar-outline'] {
    position: absolute;
    top: 17px;
    right: 12px;
    font-size: 26px;
    color: var(--color2);
    cursor: pointer;
  }
  input[disabled] ~ .form-check-label,
  input[disabled] ~ ion-icon[name='calendar-outline'] {
    cursor: default;
    opacity: 0.5 !important;
    pointer-events: none;
  }

  //.form-floating.error .ng-touched ~ ion-icon[name='calendar-outline'] {
  //  color: var(--color5) !important;
  //}
}
app-array-object , app-object-fields , app-control-field , app-form-group {
  .label-card {
    font-size: 16px;
    font-weight: 700;
    line-height: 20px;
    color: #666670;
    padding-top: 1rem;
    padding-bottom: 1rem;
  }
  input:disabled~label{
    color: #d2d6e9 !important;
  }
  textarea:disabled~label, .form-floating>:disabled~label {
    color: #d2d6e9 !important;
  }
    input.form-control:focus {
      &::placeholder {
        color: #d2d6e9 !important;
      }
    }
  textarea.form-control:focus {
    &::placeholder {
      color: #d2d6e9 !important;
    }
  }
  input.form-control[disabled] {
    color: #d2d6e9;
  }

  .remove-item {
    ion-icon {
      font-size: 24px;
      color: var(--color5);
      padding: 1rem;
      cursor: pointer;
    }
  }
  .dash-line {
    height: 2px;
    background-image: linear-gradient(90deg, transparent, transparent 50%, #fff 50%, #fff 100%), linear-gradient(90deg, var(--color2), #a7dbd8, #e0e4cc, #f6f6fb, #f6f6fb);
    background-size: 20px 3px, 100% 3px;
    border: none;
  }
  .form-floating {
    margin-bottom: 16px;
  }
  .form-floating {
    position: relative;

    > .form-control,
    > .form-control-plaintext,
    > .form-select {
      height: 56px;
      background-color: #F6F6FB;
      border: 1px solid #F6F6FB;
    }
  }
  .form-floating>label {
    color: #BEBEC6;
    font-weight: 400;
    font-size: 16px;
    padding-top: 19px;
    > sup {
      color: var(--color5);
    }
    @include media-breakpoint-up(md) {
      font-size: 16px;
    }
    opacity: 1 !important;
  }
  .form-mode-view {
    margin-bottom: 0 !important;
  }
  .form-floating>.form-control:not(:placeholder-shown)~label {
    opacity: 1 !important;
    color: $dark-grey-color;
    font-weight: bold;
    font-size: 12px;
    &::after {
      background-color: transparent;
    }
  }
  .form-floating>.form-control:focus~label::after {
    background-color: transparent;
  }
  .form-floating>.form-control:not(:placeholder-shown)~label.label-mode-view {
    font-weight: normal !important;
    font-size: 16px !important;
  }
  @mixin commonStyleDisabled {
    cursor: none !important;
    pointer-events: none !important;
  }
  @mixin commonStyleViewMode {
    @include commonStyleDisabled;
    background-color: var(--white-color) !important;
    background-image: none !important;
    border: none !important;
    color: var(--black-color) !important;
    font-weight: bold !important;
  }
  .form-control {
    &.ng-invalid {
      &.ng-touched {
        border: 1px solid var(--color5) !important;
        &:hover {
          box-shadow: none !important;
        }
        &~label {
          color: var(--color5)  !important;
        }
        &~.error-message {
          display: block;
        }
      }
      &.ng-dirty {
        &~.error-message {
          display: block;
        }
      }
      &.ng-touched ~ ion-icon[name='calendar-outline'] {
        color: var(--color5) !important;
      }
    }

  }
  .form-floating {
    .error-message {
      display: none;
      color: var(--color5)  !important;
    }
  }
  .submitted {
    app-radio-field , app-checkbox-field {
      .error-message {
       display: block;
      }
    }
      .form-check-input {
        &.ng-invalid {
          &~.form-check-label {
            color: var(--color5);
          }
        }
      }
      .form-floating {
        .ng-invalid:not(:focus):not(:hover) {
          border: 1px solid var(--color5) !important;
        }
        .ng-invalid {
          &~.error-message {
            display: block;
          }
       }
        .ng-invalid:not(:focus) ~ ion-icon[name='calendar-outline'] {
          color: var(--color5) !important;
        }
    }
  }


   //for input
  select.form-select:focus,
  input.form-control:focus,
  input.form-control:hover,
  input.form-control:hover {
    border: 1px solid var(--color2) !important;
    box-shadow: none !important;
  }
  input.form-control:focus~label {
    color: var(--color2) ;
  }
  //input.read-only {
  //  color: #25252B !important;
  //  background-color: #EFEFF4 !important;
  //  @include commonStyleDisabled
  //}
  .input-mode-view {
    @include commonStyleViewMode;
  }
  // end input

  // for textarea
  .form-floating {
    >textarea.form-control {
      &:not(:placeholder-shown)~label {
        transform: scale(.85) translateY(-0.5rem) translateX(0.15rem);
      }

      &:not(:placeholder-shown)~label::after {
        position: absolute;
        inset: 1rem 0.375rem;
        z-index: -1;
        height: 2em;
        content: "";
        background-color: #F6F6FB;
        border-radius: 0.375rem;
      }

      &:not(:placeholder-shown)~.label-mode-view::after {
        background-color: transparent !important;
      }

      &:disabled~label {
        color: #25252B;
      }

      &:disabled~label::after {
        background-color: #EFEFF4;
      }
    }

    >textarea {
      box-shadow: none !important;
      outline: 0 !important;
      border: none !important;

      &:hover,
      &:focus {
        border: none !important;
        box-shadow: inset 0 0 1px 1px var(--color2) !important;
        outline: 0 !important;
      }

      &:focus~label {
        color: var(--color2) !important;
        font-size: 12px;
        font-weight: 400;
        transform: scale(.85) translateY(-0.5rem) translateX(0.1rem) !important;
      }

      &.ng-invalid.ng-touched:focus {
        box-shadow: none !important;
      }
    }
  }
  .textarea-mode-view {
    min-height: max-content !important;
  }
  // end textarea
  .field-control {
    --c-active:  var(--color2);
    --c-active-inner: #FFFFFF;
    --c-default: #D2D6E9;
    --c-default-dark: #C7CBDF;
    --c-black: #1B1B22;

    display: flex;
    align-items: center;
    .radio,
    .checkbox,
    .switch {
      //display: table;
      border-radius: var(--border-radius, 12px) var(--border-radius-corner, 12px) var(--border-radius, 12px) var(--border-radius, 12px);
      position: relative;
      input {
        appearance: none;
        outline: none;
        border: none;
        background: var(--input-background, none);
        display: block;
        cursor: pointer;
        margin: 0;
        padding: 0;
        border-radius: inherit;
        width: var(--input-width, 24px);
        height: var(--input-height, 24px);
      }
      svg {
        display: block;
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        top: 0;
        pointer-events: none;
        fill: var(--c-active-inner);
        transform: scale(1.01) translateZ(0);
      }
    }

    .radio,
    .checkbox {
      input {
        --border-color: var(--c-default);
        --border-width: 2px;
        box-shadow: inset 0 0 0 var(--border-width) var(--border-color);
        &:checked {
          --border-color: var(--c-active);
        }
        &:not(:checked) {
          transition: box-shadow .25s;
          &:hover {
            --border-width: 3px;
            --border-color: var(--c-active);
          }
        }
        &:disabled {
          --border-color: var(--c-default-dark);
          &:hover {
          --border-color: var(--c-default-dark);
          }
        }
      }
    }

    .radio {
      input {
        &:checked {
          --border-width: 6.75px;
        }
        & + svg {
          --top-y: 0;
          --dot-y: -17px;
          --drop-y: -14px;
          --top-s-x: 1.75;
          --top-s-y: 1;
          .top {
            transform-origin: 12px -12px;
            transform: translateY(var(--top-y)) scale(var(--top-s-x), var(--top-s-y)) translateZ(0);
          }
          .dot {
            transform: translateY(var(--dot-y)) translateZ(0);
          }
          .drop {
            transform: translateY(var(--drop-y)) translateZ(0);
          }
        }
      }
    }

    .checkbox {
      --border-radius: 5px;
      --border-radius-corner: 5px;
      input {
        &:checked {
          --border-width: 12px;
          & + svg {
            --tick-offset: 46.5px;
          }
        }
        & + svg {
          --dot-x: 14px;
          --dot-y: -14px;
          --dot-s: 1;
          --tick-offset: 20.5px;
          --tick-array: 16px;
          --tick-s: 1;
          --drop-s: 1;
          .tick {
            fill: none;
            stroke-width: 3px;
            stroke-linecap: round;
            stroke-linejoin: round;
            stroke: var(--c-active-inner);
            stroke-dasharray: var(--tick-array) 33px;
            stroke-dashoffset: var(--tick-offset);
            transform-origin: 10.5px 16px;
            transform: scale(var(--tick-s)) translateZ(0);
          }
          .dot {
            transform-origin: 10.5px 15.5px;
            transform: translate(var(--dot-x), var(--dot-y)) scale(var(--dot-s)) translateZ(0);
          }
          .drop {
            transform-origin: 25px -1px;
            transform: scale(var(--drop-s)) translateZ(0);
          }
        }
      }
    }

    .switch {
      --input-width: 38px;
      input {
        --input-background: var(--c-default);
        &:checked {
          --input-background: var(--c-active);
          & + svg {
            --default-s: 0;
            --default-x: 8px;
            --dot-s: 1;
            --dot-x: 0px;
          }
        }
        & + svg {
          --input-background: var(--c-default);
          --default-s: 1;
          --default-x: 0px;
          --dot-s: 0;
          --dot-x: -8px;
        }
      }
      .default {
        transform-origin: 12px 12px;
        transform: translateX(var(--default-x)) scale(var(--default-s)) translateZ(0);
      }
      .dot {
        transform-origin: 26px 12px;
        transform: translateX(var(--dot-x)) scale(var(--dot-s)) translateZ(0);
      }
    }

    .btn {
      appearance: none;
      border: none;
      position: relative;
      background: var(--color2);
      color: #fff;
      outline: none;
      cursor: pointer;
      font-size: 14px;
      line-height: 21px;
      font-weight: 600;
      display: block;
      width: 132px;
      text-align: center;
      border-radius: 7px;
      margin: 0 auto;
      padding: 12px 0;
      span {
        position: relative;
        z-index: 1;
      }
      svg {
        display: block;
        width: 100%;
        height: 100%;
        position: absolute;
        left: 0;
        top: 0;
        fill: var(--c-black);
        circle {
          transition: transform var(--duration, .25s) ease-out;
          &.top-left {
            transform: translate(var(--spacing, -16px), var(--spacing, -40px));
          }
          &.middle-bottom {
            transform: translate(var(--spacing, 8px), var(--spacing, 40px));
          }
          &.top-right {
            transform: translate(var(--spacing, 40px), var(--spacing, -40px));
          }
          &.right-bottom {
            transform: translate(var(--spacing, 4px), var(--spacing, 40px));
          }
          &.left-bottom {
            transform: translate(var(--spacing, -40px), var(--spacing, 40px));
          }
        }
      }
      &:hover {
        --spacing: 0;
        --duration: .45s;
      }
    }
  }
  // for select

  .form-floating {
    &.select-has-value {
      label {
        opacity: 1 !important;
        color: $dark-grey-color;
        font-weight: bold;
      }
    }
  }
  select.form-select {
    background-color: #F6F6FB;
  }
  .select-custom {
    line-height: 1.25rem;
    pointer-events: none;

    &:focus-within {
      border: none !important;
      box-shadow: inset 0 0 1px 1px var(--color2) !important;
    }

    &.ng-select {
      pointer-events: auto;
    }

    &.select-mode-view {
      @include commonStyleViewMode;
    }
  }

}



